Ext.data.JsonP.SATAR_node_EventObserver({"allMixins":[],"aliases":{},"inheritdoc":null,"alternateClassNames":[],"subclasses":[],"tagname":"class","extends":null,"inheritable":false,"statics":{"property":[],"css_var":[],"cfg":[],"css_mixin":[],"method":[],"event":[]},"singleton":true,"requires":[],"code_type":"assignment","files":[{"href":"EventObserver.html#SATAR-node-EventObserver","filename":"EventObserver.js"}],"superclasses":[],"members":{"property":[],"css_var":[{"owner":"SATAR.node.EventObserver","tagname":"css_var","name":"Node","id":"css_var-Node","meta":{}}],"cfg":[],"css_mixin":[],"method":[{"owner":"SATAR.node.EventObserver","tagname":"method","name":"init","id":"method-init","meta":{}},{"owner":"SATAR.node.EventObserver","tagname":"method","name":"onNodeEvent","id":"method-onNodeEvent","meta":{}}],"event":[]},"component":false,"mixins":[],"private":false,"name":"SATAR.node.EventObserver","html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/EventObserver.html#SATAR-node-EventObserver' target='_blank'>EventObserver.js</a></div></pre><div class='doc-contents'><p>Event observer (system-wide async IO) using hook.io.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-init' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='SATAR.node.EventObserver'>SATAR.node.EventObserver</span><br/><a href='source/EventObserver.html#SATAR-node-EventObserver-method-init' target='_blank' class='view-source'>view source</a></div><a href='#!/api/SATAR.node.EventObserver-method-init' class='name expandable'>init</a>( <span class='pre'><a href=\"#!/api/SATAR.race.Manager\" rel=\"SATAR.race.Manager\" class=\"docClass\">SATAR.race.Manager</a> raceManagerRef</span> )</div><div class='description'><div class='short'>Initialize the global async hook ...</div><div class='long'><p>Initialize the global async hook</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>raceManagerRef</span> : <a href=\"#!/api/SATAR.race.Manager\" rel=\"SATAR.race.Manager\" class=\"docClass\">SATAR.race.Manager</a><div class='sub-desc'><p>Race manager reference</p>\n</div></li></ul></div></div></div><div id='method-onNodeEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='SATAR.node.EventObserver'>SATAR.node.EventObserver</span><br/><a href='source/EventObserver.html#SATAR-node-EventObserver-method-onNodeEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/SATAR.node.EventObserver-method-onNodeEvent' class='name expandable'>onNodeEvent</a>( <span class='pre'><a href=\"#!/api/SATAR.event.Node\" rel=\"SATAR.event.Node\" class=\"docClass\">SATAR.event.Node</a> nodeEvent</span> )</div><div class='description'><div class='short'>Node event listener that gets called when a new\nnode event comes in and gets emitted. ...</div><div class='long'><p>Node event listener that gets called when a new\nnode event comes in and gets emitted.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>nodeEvent</span> : <a href=\"#!/api/SATAR.event.Node\" rel=\"SATAR.event.Node\" class=\"docClass\">SATAR.event.Node</a><div class='sub-desc'><p>Node event instance</p>\n</div></li></ul></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-css_var'>CSS Variables</h3><div class='subsection'><div id='css_var-Node' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='SATAR.node.EventObserver'>SATAR.node.EventObserver</span><br/><a href='source/EventObserver.html#SATAR-node-EventObserver-css_var-Node' target='_blank' class='view-source'>view source</a></div><a href='#!/api/SATAR.node.EventObserver-css_var-Node' class='name not-expandable'>Node</a><span> : SATAR.node.EventPersistor</span></div><div class='description'><div class='short'><p>persistor instance</p>\n</div><div class='long'><p>persistor instance</p>\n</div></div></div></div></div></div></div>","mixedInto":[],"uses":[],"meta":{"author":["Aron Homberg <info@aron-homberg.de>"]},"id":"class-SATAR.node.EventObserver"});